"""empty message

Revision ID: 1c790e111b79
Revises: 
Create Date: 2023-06-02 14:19:40.083043

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1c790e111b79'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('aphp_num', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('image_file', sa.String(length=20), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('password', sa.String(length=60), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('aphp_num'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('grant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('date_posted', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_accepted', sa.Boolean(), nullable=False),
    sa.Column('project_token', sa.String(length=120), nullable=False),
    sa.Column('project_title', sa.String(length=120), nullable=False),
    sa.Column('urgency_of_request', sa.String(length=20), nullable=False),
    sa.Column('if_urgency', sa.Text(), nullable=True),
    sa.Column('project_context', sa.Text(), nullable=False),
    sa.Column('project_summary', sa.Text(), nullable=False),
    sa.Column('bioF_needs', sa.Text(), nullable=False),
    sa.Column('data_available', sa.String(length=20), nullable=False),
    sa.Column('access_data', sa.String(length=120), nullable=True),
    sa.Column('data_owner', sa.String(length=20), nullable=False),
    sa.Column('if_regulatory_requirements', sa.String(length=20), nullable=False),
    sa.Column('data_type', sa.String(length=20), nullable=False),
    sa.Column('data_size', sa.Integer(), nullable=False),
    sa.Column('add_info', sa.Text(), nullable=False),
    sa.Column('regulatory_requirements', sa.String(length=20), nullable=True),
    sa.Column('application', sa.String(length=20), nullable=True),
    sa.Column('clinical_service', sa.String(length=20), nullable=True),
    sa.Column('organism', sa.String(length=20), nullable=True),
    sa.Column('laboratories', sa.String(length=20), nullable=True),
    sa.Column('if_no_laboratory', sa.String(length=20), nullable=True),
    sa.Column('principal_investigator', sa.String(length=20), nullable=True),
    sa.Column('promotor', sa.String(length=20), nullable=True),
    sa.Column('funding_type', sa.String(length=20), nullable=True),
    sa.Column('total_amount', sa.String(length=20), nullable=True),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_title')
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('date_posted', sa.DateTime(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('image_file', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('date_posted', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_accepted', sa.Boolean(), nullable=False),
    sa.Column('project_token', sa.String(length=120), nullable=False),
    sa.Column('project_title', sa.String(length=120), nullable=False),
    sa.Column('urgency_of_request', sa.String(length=20), nullable=False),
    sa.Column('if_urgency', sa.Text(), nullable=True),
    sa.Column('project_context', sa.Text(), nullable=False),
    sa.Column('project_context_private', sa.Text(), nullable=True),
    sa.Column('project_summary', sa.Text(), nullable=False),
    sa.Column('bioF_needs', sa.Text(), nullable=False),
    sa.Column('data_available', sa.String(length=20), nullable=False),
    sa.Column('access_data', sa.String(length=120), nullable=True),
    sa.Column('data_owner', sa.String(length=20), nullable=False),
    sa.Column('if_regulatory_requirements', sa.String(length=20), nullable=False),
    sa.Column('data_type', sa.String(length=20), nullable=False),
    sa.Column('data_size', sa.Integer(), nullable=False),
    sa.Column('add_info', sa.Text(), nullable=False),
    sa.Column('regulatory_requirements', sa.String(length=20), nullable=True),
    sa.Column('application', sa.String(length=20), nullable=True),
    sa.Column('clinical_service', sa.String(length=20), nullable=True),
    sa.Column('laboratories', sa.String(length=20), nullable=True),
    sa.Column('if_no_laboratory', sa.String(length=20), nullable=True),
    sa.Column('organism', sa.String(length=20), nullable=True),
    sa.Column('principal_investigator', sa.String(length=20), nullable=True),
    sa.Column('promotor', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_title'),
    sa.UniqueConstraint('project_token')
    )
    op.create_table('project_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.String(length=70), nullable=False),
    sa.Column('asking_for', sa.String(length=70), nullable=False),
    sa.Column('project_request', sa.String(length=100), nullable=False),
    sa.Column('date_posted', sa.DateTime(), nullable=False),
    sa.Column('motif', sa.String(length=1000), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_request')
    op.drop_table('project')
    op.drop_table('post')
    op.drop_table('grant')
    op.drop_table('user')
    # ### end Alembic commands ###
