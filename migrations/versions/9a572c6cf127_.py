"""empty message

Revision ID: 9a572c6cf127
Revises: 658a05402282
Create Date: 2023-05-16 15:35:28.120887

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9a572c6cf127'
down_revision = '658a05402282'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('grant', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_accepted', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('project_token', sa.String(length=120), nullable=False))
        batch_op.alter_column('project_title',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('urgency_of_request',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('if_urgency',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('project_context',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('project_summary',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('bioF_needs',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('data_available',
               existing_type=sa.BOOLEAN(),
               type_=sa.String(length=20),
               nullable=False)
        batch_op.alter_column('access_data',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('data_owner',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('if_regulatory_requirements',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('data_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('data_size',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('add_info',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('regulatory_requirements',
               existing_type=sa.BOOLEAN(),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['project_token'])

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.alter_column('data_available',
               existing_type=sa.BOOLEAN(),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('regulatory_requirements',
               existing_type=sa.BOOLEAN(),
               type_=sa.String(length=20),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.alter_column('regulatory_requirements',
               existing_type=sa.String(length=20),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
        batch_op.alter_column('data_available',
               existing_type=sa.String(length=20),
               type_=sa.BOOLEAN(),
               existing_nullable=False)

    with op.batch_alter_table('grant', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('regulatory_requirements',
               existing_type=sa.String(length=20),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
        batch_op.alter_column('add_info',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('data_size',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('data_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('if_regulatory_requirements',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('data_owner',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('access_data',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
        batch_op.alter_column('data_available',
               existing_type=sa.String(length=20),
               type_=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('bioF_needs',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('project_summary',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('project_context',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('if_urgency',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('urgency_of_request',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('project_title',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
        batch_op.drop_column('project_token')
        batch_op.drop_column('is_accepted')

    # ### end Alembic commands ###
